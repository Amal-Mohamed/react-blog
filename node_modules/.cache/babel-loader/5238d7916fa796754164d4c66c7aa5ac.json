{"ast":null,"code":"var _jsxFileName = \"D:\\\\learning\\\\bootstrap-react\\\\src\\\\pages\\\\contact.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport Banner from \"../components/Banner\";\nimport { TextField, Container, Button, Snackbar } from \"@material-ui/core\";\nimport { Alert } from \"@material-ui/lab\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      name: \"\",\n      phone: \"\",\n      open: false,\n      setOpen: false\n    };\n\n    this.handleChange = event => {\n      // const email = event.target.value;\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {\n      console.log(\"here\"); // your submit logic\n\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClick = () => {\n      this.setState({\n        open: true\n      });\n    };\n\n    this.handleClose = (event, reason) => {\n      if (reason === \"clickaway\") {\n        return;\n      }\n\n      this.setState({\n        open: false\n      });\n    };\n\n    this.form = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      title: \"contact us\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.StrictMode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: this.form,\n      onSubmit: this.handleSubmit,\n      onError: errors => console.log(errors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Name\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      name: \"name\",\n      value: this.state.name,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Email\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      name: \"email\",\n      value: this.state.email,\n      validators: [\"required\", \"isEmail\"],\n      errorMessages: [\"this field is required\", \"email is not valid\"],\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Phone\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      name: \"phone\",\n      value: this.state.phone,\n      validators: [\"required\", \"matchRegexp:^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$\"],\n      errorMessages: [\"this field is required\"],\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"secondary\",\n      variant: \"contained\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 15\n      }\n    }, \"Submit\"))), \"this.disableBtn = true\", /*#__PURE__*/React.createElement(Snackbar, {\n      open: this.state.open,\n      autoHideDuration: 6000,\n      onClose: this.handleClose,\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(Alert, {\n      onClose: this.handleClose,\n      severity: \"success\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 13\n      }\n    }, \"This is a success message!\"))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["D:/learning/bootstrap-react/src/pages/contact.jsx"],"names":["React","Component","Fragment","Banner","TextField","Container","Button","Snackbar","Alert","useForm","Controller","ValidatorForm","TextValidator","Contact","constructor","props","state","email","name","phone","open","setOpen","handleChange","event","setState","target","value","handleSubmit","console","log","handleClick","handleClose","reason","form","createRef","render","errors"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,MAAP,MAAmB,sBAAnB;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,MAA/B,EAAuCC,QAAvC,QAAuD,mBAAvD;AACA,SAASC,KAAT,QAAsB,kBAAtB;AACA,SAASC,OAAT,EAAkBC,UAAlB,QAAoC,iBAApC;AACA,SAASC,aAAT,EAAwBC,aAAxB,QAA6C,kCAA7C;;AAEA,MAAMC,OAAN,SAAsBZ,SAAtB,CAAgC;AAC9Ba,EAAAA,WAAW,CAACC,KAAD,EAAQ;AACjB,UAAMA,KAAN;AADiB,SAInBC,KAJmB,GAIX;AACNC,MAAAA,KAAK,EAAE,EADD;AAENC,MAAAA,IAAI,EAAE,EAFA;AAGNC,MAAAA,KAAK,EAAE,EAHD;AAINC,MAAAA,IAAI,EAAE,KAJA;AAKNC,MAAAA,OAAO,EAAE;AALH,KAJW;;AAAA,SAYnBC,YAZmB,GAYHC,KAAD,IAAW;AACxB;AACA,WAAKC,QAAL,CAAc;AAAE,SAACD,KAAK,CAACE,MAAN,CAAaP,IAAd,GAAqBK,KAAK,CAACE,MAAN,CAAaC;AAApC,OAAd;AACD,KAfkB;;AAAA,SAiBnBC,YAjBmB,GAiBJ,MAAM;AACnBC,MAAAA,OAAO,CAACC,GAAR,CAAY,MAAZ,EADmB,CAEnB;;AACA,WAAKL,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KArBkB;;AAAA,SAuBnBU,WAvBmB,GAuBL,MAAM;AAClB,WAAKN,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAzBkB;;AAAA,SA2BnBW,WA3BmB,GA2BL,CAACR,KAAD,EAAQS,MAAR,KAAmB;AAC/B,UAAIA,MAAM,KAAK,WAAf,EAA4B;AAC1B;AACD;;AAED,WAAKR,QAAL,CAAc;AAAEJ,QAAAA,IAAI,EAAE;AAAR,OAAd;AACD,KAjCkB;;AAEjB,SAAKa,IAAL,GAAYjC,KAAK,CAACkC,SAAN,EAAZ;AACD;;AA+BDC,EAAAA,MAAM,GAAG;AACP,wBACE,oBAAC,QAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,MAAD;AAAQ,MAAA,KAAK,EAAC,YAAd;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MADF,eAEE,oBAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,KAAD,CAAO,UAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBACE,oBAAC,aAAD;AACE,MAAA,GAAG,EAAE,KAAKF,IADZ;AAEE,MAAA,QAAQ,EAAE,KAAKN,YAFjB;AAGE,MAAA,OAAO,EAAGS,MAAD,IAAYR,OAAO,CAACC,GAAR,CAAYO,MAAZ,CAHvB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,MAFR;AAGE,MAAA,QAAQ,EAAE,KAAKd,YAHjB;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,MALP;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWE,IANpB;AAOE,MAAA,UAAU,EAAE,CAAC,UAAD,CAPd;AAQE,MAAA,aAAa,EAAE,CAAC,wBAAD,CARjB;AASE,MAAA,SAAS,EAAC,MATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MALF,eAgBE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,QAAQ,EAAE,KAAKI,YAHjB;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWC,KANpB;AAOE,MAAA,UAAU,EAAE,CAAC,UAAD,EAAa,SAAb,CAPd;AAQE,MAAA,aAAa,EAAE,CAAC,wBAAD,EAA2B,oBAA3B,CARjB;AASE,MAAA,SAAS,EAAC,MATZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MAhBF,eA2BE,oBAAC,aAAD;AACE,MAAA,OAAO,EAAC,UADV;AAEE,MAAA,KAAK,EAAC,OAFR;AAGE,MAAA,QAAQ,EAAE,KAAKK,YAHjB;AAIE,MAAA,SAAS,MAJX;AAKE,MAAA,IAAI,EAAC,OALP;AAME,MAAA,KAAK,EAAE,KAAKN,KAAL,CAAWG,KANpB;AAOE,MAAA,UAAU,EAAE,CACV,UADU,EAEV,wDAFU,CAPd;AAWE,MAAA,aAAa,EAAE,CAAC,wBAAD,CAXjB;AAYE,MAAA,SAAS,EAAC,MAZZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,MA3BF,eA0CE,oBAAC,MAAD;AACE,MAAA,IAAI,EAAC,QADP;AAEE,MAAA,KAAK,EAAC,WAFR;AAGE,MAAA,OAAO,EAAC,WAHV;AAIE,MAAA,SAAS,EAAC,MAJZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,gBA1CF,CADF,CADF,yCAuDE,oBAAC,QAAD;AACE,MAAA,IAAI,EAAE,KAAKH,KAAL,CAAWI,IADnB;AAEE,MAAA,gBAAgB,EAAE,IAFpB;AAGE,MAAA,OAAO,EAAE,KAAKW,WAHhB;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oBAKE,oBAAC,KAAD;AAAO,MAAA,OAAO,EAAE,KAAKA,WAArB;AAAkC,MAAA,QAAQ,EAAC,SAA3C;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,oCALF,CAvDF,CAFF,CADF;AAsED;;AA1G6B;;AA6GhC,eAAelB,OAAf","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport Banner from \"../components/Banner\";\r\nimport { TextField, Container, Button, Snackbar } from \"@material-ui/core\";\r\nimport { Alert } from \"@material-ui/lab\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.form = React.createRef();\r\n  }\r\n  state = {\r\n    email: \"\",\r\n    name: \"\",\r\n    phone: \"\",\r\n    open: false,\r\n    setOpen: false,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // const email = event.target.value;\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    console.log(\"here\");\r\n    // your submit logic\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClick = () => {\r\n    this.setState({ open: true });\r\n  };\r\n\r\n  handleClose = (event, reason) => {\r\n    if (reason === \"clickaway\") {\r\n      return;\r\n    }\r\n\r\n    this.setState({ open: false });\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Banner title=\"contact us\" />\r\n        <Container>\r\n          <React.StrictMode>\r\n            <ValidatorForm\r\n              ref={this.form}\r\n              onSubmit={this.handleSubmit}\r\n              onError={(errors) => console.log(errors)}\r\n            >\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n                className=\"mt-2\"\r\n              />\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                label=\"Email\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n                className=\"mt-2\"\r\n              />\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                label=\"Phone\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                name=\"phone\"\r\n                value={this.state.phone}\r\n                validators={[\r\n                  \"required\",\r\n                  \"matchRegexp:^[+]*[(]{0,1}[0-9]{1,4}[)]{0,1}[-s./0-9]*$\",\r\n                ]}\r\n                errorMessages={[\"this field is required\"]}\r\n                className=\"mt-2\"\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className=\"mt-2\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </ValidatorForm>\r\n          </React.StrictMode>\r\n          this.disableBtn = true\r\n          <Snackbar\r\n            open={this.state.open}\r\n            autoHideDuration={6000}\r\n            onClose={this.handleClose}\r\n          >\r\n            <Alert onClose={this.handleClose} severity=\"success\">\r\n              This is a success message!\r\n            </Alert>\r\n          </Snackbar>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}
{"ast":null,"code":"var _jsxFileName = \"D:\\\\learning\\\\bootstrap-react\\\\src\\\\pages\\\\contact.jsx\";\nimport React, { Component, Fragment } from \"react\";\nimport Banner from \"../components/Banner\";\nimport { TextField, Container, Button } from \"@material-ui/core\";\nimport { useForm, Controller } from \"react-hook-form\";\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\n\nclass Contact extends Component {\n  constructor(props) {\n    super(props);\n    this.state = {\n      email: \"\",\n      name: \"\",\n      phone: null\n    };\n\n    this.handleChange = event => {\n      // const email = event.target.value;\n      this.setState({\n        [event.target.name]: event.target.value\n      });\n    };\n\n    this.handleSubmit = () => {// your submit logic\n    };\n\n    this.form = React.createRef();\n  }\n\n  render() {\n    return /*#__PURE__*/React.createElement(Fragment, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 7\n      }\n    }, /*#__PURE__*/React.createElement(Banner, {\n      title: \"contact us\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }\n    }), /*#__PURE__*/React.createElement(Container, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }\n    }, /*#__PURE__*/React.createElement(React.StrictMode, {\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 11\n      }\n    }, /*#__PURE__*/React.createElement(ValidatorForm, {\n      ref: this.form,\n      onSubmit: this.handleSubmit,\n      onError: errors => console.log(errors),\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }\n    }, /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Name\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      name: \"name\",\n      value: this.state.name,\n      validators: [\"required\"],\n      errorMessages: [\"this field is required\"],\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Email\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      name: \"email\",\n      value: this.state.email,\n      validators: [\"required\", \"isEmail\"],\n      errorMessages: [\"this field is required\", \"email is not valid\"],\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(TextValidator, {\n      variant: \"outlined\",\n      label: \"Phone\",\n      onChange: this.handleChange,\n      fullWidth: true,\n      name: \"phone\",\n      value: this.state.phone,\n      validators: [\"required\", \"matchRegexp:^[0-9]$\"],\n      errorMessages: [\"this field is required\"],\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 15\n      }\n    }), /*#__PURE__*/React.createElement(Button, {\n      type: \"submit\",\n      color: \"secondary\",\n      variant: \"contained\",\n      className: \"mt-2\",\n      __self: this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 15\n      }\n    }, \"Submit\")))));\n  }\n\n}\n\nexport default Contact;","map":{"version":3,"sources":["D:/learning/bootstrap-react/src/pages/contact.jsx"],"names":["React","Component","Fragment","Banner","TextField","Container","Button","useForm","Controller","ValidatorForm","TextValidator","Contact","constructor","props","state","email","name","phone","handleChange","event","setState","target","value","handleSubmit","form","createRef","render","errors","console","log"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from \"react\";\r\nimport Banner from \"../components/Banner\";\r\nimport { TextField, Container, Button } from \"@material-ui/core\";\r\nimport { useForm, Controller } from \"react-hook-form\";\r\nimport { ValidatorForm, TextValidator } from \"react-material-ui-form-validator\";\r\n\r\nclass Contact extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.form = React.createRef();\r\n  }\r\n  state = {\r\n    email: \"\",\r\n    name: \"\",\r\n    phone: null,\r\n  };\r\n\r\n  handleChange = (event) => {\r\n    // const email = event.target.value;\r\n    this.setState({ [event.target.name]: event.target.value });\r\n  };\r\n\r\n  handleSubmit = () => {\r\n    // your submit logic\r\n  };\r\n  render() {\r\n    return (\r\n      <Fragment>\r\n        <Banner title=\"contact us\" />\r\n        <Container>\r\n          <React.StrictMode>\r\n            <ValidatorForm\r\n              ref={this.form}\r\n              onSubmit={this.handleSubmit}\r\n              onError={(errors) => console.log(errors)}\r\n            >\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                label=\"Name\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                name=\"name\"\r\n                value={this.state.name}\r\n                validators={[\"required\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n                className=\"mt-2\"\r\n              />\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                label=\"Email\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                name=\"email\"\r\n                value={this.state.email}\r\n                validators={[\"required\", \"isEmail\"]}\r\n                errorMessages={[\"this field is required\", \"email is not valid\"]}\r\n                className=\"mt-2\"\r\n              />\r\n              <TextValidator\r\n                variant=\"outlined\"\r\n                label=\"Phone\"\r\n                onChange={this.handleChange}\r\n                fullWidth\r\n                name=\"phone\"\r\n                value={this.state.phone}\r\n                validators={[\"required\", \"matchRegexp:^[0-9]$\"]}\r\n                errorMessages={[\"this field is required\"]}\r\n                className=\"mt-2\"\r\n              />\r\n\r\n              <Button\r\n                type=\"submit\"\r\n                color=\"secondary\"\r\n                variant=\"contained\"\r\n                className=\"mt-2\"\r\n              >\r\n                Submit\r\n              </Button>\r\n            </ValidatorForm>\r\n          </React.StrictMode>\r\n        </Container>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default Contact;\r\n"]},"metadata":{},"sourceType":"module"}